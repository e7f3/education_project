{
  // Place your production-project workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Typescript react arrow functional component": {
    "scope": "typescript, typescriptreact",
    "prefix": "traf",
    "body": [
      "import classes from './${TM_FILENAME_BASE}.module.scss'",
      "import { FC } from 'react'",
      "import { classNames } from 'shared/lib/classNames/classNames'",
      "\r",
      "export interface ${TM_FILENAME_BASE}Props {",
      "\tclassName?: string",
      "}",
      "\r",
      "export const ${TM_FILENAME_BASE} : FC<${TM_FILENAME_BASE}Props> = (props) => {",
      "\tconst { className } = props",
      "\treturn (",
      "\t\t<div className={ classNames(classes.${TM_FILENAME_BASE}, {}, [className]) }>",
      "\r",
      "\t\t</div>",
      "\t)",
      "}",
      "\r"
    ],
    "description": "TypeScript React arrow functional component with props interface"
  }
}
